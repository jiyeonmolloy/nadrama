# Copyright 2025 Nadrama Pty Ltd
# SPDX-License-Identifier: Apache-2.0
---
# NadramaMachine.
# If changing this, also need to update NadramaMachineTemplate.
# Reference material:
# https://cluster-api.sigs.k8s.io/developer/providers/contracts/infra-machine
# https://github.com/kubernetes-sigs/cluster-api-provider-aws/blob/main/config/crd/bases/infrastructure.cluster.x-k8s.io_awsmachines.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: nadramamachines.infrastructure.cluster.x-k8s.io
  labels:
    cluster.x-k8s.io/provider: nadrama
    cluster.x-k8s.io/v1beta1: v1beta1
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: NadramaMachine
    listKind: NadramaMachineList
    plural: nadramamachines
    shortNames:
      - nm
    singular: nadramamachine
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Cluster to which this NadramaMachine belongs
          jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
          name: Cluster
          type: string
        - description: Machine ready status
          jsonPath: .status.ready
          name: Ready
          type: string
        - description: Provider ID
          jsonPath: .spec.providerID
          name: InstanceID
          type: string
        - description: Machine object which owns with this NadramaMachine
          jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
          name: Machine
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: NadramaMachine is the schema for any cluster nodes.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: NadramaMachineSpec defines the desired state of an cluster node.
              properties:
                nodeType:
                  description: "NodeType is the type of node to create e.g. m4.xlarge on AWS"
                  minLength: 2
                  type: string
                subnets:
                  description: |-
                    Subnets is a reference to the subnet(s) to use for this instance. If not specified, any cluster subnet may be used.
                  items:
                    description: Subnet is a subnet IPv4 CIDR used to identify a cluster subnet.
                    type: string
                  type: array
                providerID:
                  description:
                    ProviderID is the unique identifier as specified by the
                    cloud provider.
                  type: string
                failureDomain:
                  description: |-
                    failureDomain is the failure domain the machine should be created in, as specified by the Machine spec.
                    Must match a key in the FailureDomains map stored on the cluster object.
                    Note that Nadrama will report back the actual failure domain
                    used in the status.failureDomain field per https://cluster-api.sigs.k8s.io/developer/providers/contracts/infra-machine#inframachine-failure-domain
                  type: string
              required:
                - nodeType
              type: object
            status:
              description: NadramaMachineStatus defines the observed state of NadramaMachine.
              properties:
                failureDomain:
                  description: |-
                    failureDomain is the failure domain the machines was created in.
                    Must match a key in the FailureDomains map stored on the cluster object.
                  type: string
                addresses:
                  description: Addresses contains the underlying nodes associated addresses.
                  items:
                    description:
                      MachineAddress contains information for the node's
                      address.
                    properties:
                      address:
                        description: The machine address.
                        type: string
                      type:
                        description:
                          Machine address type, one of Hostname, ExternalIP,
                          InternalIP, ExternalDNS or InternalDNS.
                        type: string
                    required:
                      - address
                      - type
                    type: object
                  type: array
                conditions:
                  description: Conditions defines current service state of the NadramaMachine.
                  items:
                    description:
                      Condition defines an observation of a Cluster API resource
                      operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          Last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A human readable message indicating details about the transition.
                          This field may be empty.
                        type: string
                      reason:
                        description: |-
                          The reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may not be empty.
                        type: string
                      severity:
                        description: |-
                          Severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  description: |-
                    FailureMessage will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a more verbose string suitable
                    for logging and human consumption.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                failureReason:
                  description: |-
                    FailureReason will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a succinct value suitable
                    for machine interpretation.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
